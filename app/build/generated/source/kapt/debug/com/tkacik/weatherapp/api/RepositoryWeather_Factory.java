// Generated by Dagger (https://dagger.dev).
package com.tkacik.weatherapp.api;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryWeather_Factory implements Factory<RepositoryWeather> {
  private final Provider<ServiceWeather> weatherServiceProvider;

  public RepositoryWeather_Factory(Provider<ServiceWeather> weatherServiceProvider) {
    this.weatherServiceProvider = weatherServiceProvider;
  }

  @Override
  public RepositoryWeather get() {
    return newInstance(weatherServiceProvider.get());
  }

  public static RepositoryWeather_Factory create(Provider<ServiceWeather> weatherServiceProvider) {
    return new RepositoryWeather_Factory(weatherServiceProvider);
  }

  public static RepositoryWeather newInstance(ServiceWeather weatherService) {
    return new RepositoryWeather(weatherService);
  }
}
