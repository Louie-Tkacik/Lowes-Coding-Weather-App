// Generated by Dagger (https://dagger.dev).
package com.tkacik.weatherapp.viewmodel;

import com.tkacik.weatherapp.api.RepositoryWeather;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherViewModel_Factory implements Factory<WeatherViewModel> {
  private final Provider<RepositoryWeather> repositoryWeatherProvider;

  public WeatherViewModel_Factory(Provider<RepositoryWeather> repositoryWeatherProvider) {
    this.repositoryWeatherProvider = repositoryWeatherProvider;
  }

  @Override
  public WeatherViewModel get() {
    return newInstance(repositoryWeatherProvider.get());
  }

  public static WeatherViewModel_Factory create(
      Provider<RepositoryWeather> repositoryWeatherProvider) {
    return new WeatherViewModel_Factory(repositoryWeatherProvider);
  }

  public static WeatherViewModel newInstance(RepositoryWeather repositoryWeather) {
    return new WeatherViewModel(repositoryWeather);
  }
}
